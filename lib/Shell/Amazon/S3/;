package Shell::Amazon::S3::Command;
use Moose;
use MooseX::ClassAttribute;
use Net::Amazon::S3;
use Shell::Amazon::S3::ConfigLoader;

class_has 'bucket_name_' => (
    is => 'rw' 
);

class_has 'api_' => ( 
    is => 'rw', 
    required => 1,
    default => sub {
    my $config_loader = Shell::Amazon::S3::ConfigLoader->new; 
    my $config = $config_loader->load;
    $api = Net::Amazon::S3->new(
        { 
            aws_access_key_id => $config{aws_access_key_id},
            aws_secret_access_key => $config{aws_secret_access_key},
        }
    );

    }
);


sub validate_tokens {
}

sub do_execute {
    my ($self, $tokens) = @_;
    $self->validate_tokens($tokens);
    my $args = $self->parse_tokens($tokens);
    $self->execute($args);
}

sub set_bucket_name {
    my ($self, $bucket_name) = @_;
    __PACKAGE__->bucket_name_($bucket_name);
}

sub get_bucket_name {
    __PACKAGE__->bucket_name;
}

sub bucket {
   my ($self) = shift; 
   my $bucket = __PACKAGE__->api_->bucket($self->get_bucket_name);
   $bucket;
}

__PACKAGE__->meta->make_immutable;

1;
